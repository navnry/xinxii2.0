<template>
    <view class="content">
        <x-nav-bar :no-border="true" title="添加客户"></x-nav-bar>
        <view class="group">
            <x-input minWidthNum="152rpx" leftText="姓名" placeholder="请输入姓名(必填)" v-model="customerObj.name"></x-input>
            <view class="list-item">
                <view class="left">性别</view>
                <view class="sex-box">
                    <view :class="{act: customerObj.sex==0}" @click="selSex(0)">男</view>
                    <view :class="{act: customerObj.sex==1}" @click="selSex(1)">女</view>
                </view>
            </view>
            <x-input type="tel" minWidthNum="152rpx" leftText="年龄" placeholder="请输入年龄(非必填)" v-model="customerObj.age"></x-input>
            <x-input type="tel" minWidthNum="152rpx" maxlength="11" leftText="手机号码" placeholder="请输入手机号码(必填)" v-model="customerObj.mobile"></x-input>
            <x-input type="text" minWidthNum="152rpx" maxlength="18" leftText="身份证号" placeholder="请输入身份证号(非必填)" v-model="customerObj.identity"></x-input>
            <x-input class="last-item" minWidthNum="152rpx" leftText="备注" placeholder="请输入" v-model="customerObj.remake"></x-input>
        </view>
        <button class="btn" @click="saveCustomer">保存</button>
    </view>
</template>

<script>
    import { IdentityCodeValid } from '@/common/utils'
    export default{
        data () {
            return {
                customerObj: {
                    name: '',
                    sex: 0,
                    age: '',
                    mobile: '',
                    identity: '',
                    remake: '',
                    proxyId: ''
                }
            }
        },
        onLoad(option) {
            
        },
        methods:{
            selSex(val){
                if(this.customerObj.sex == val) return
                this.customerObj.sex = val
            },
            saveCustomer () {
                console.log(this.customerObj)
                if (!this.customerObj.name) {
                	this.showToast('请输入姓名')
                	return
                }
                let nameReg = /^[\u4e00-\u9fa5_a-zA-Z]+$/ 
                if(!nameReg.test(this.customerObj.name)){
                    this.showToast('姓名仅支持中文或英文')
                    return
                }
                this.customerObj.mobile = this.customerObj.mobile.trim()
                if (!this.customerObj.mobile) {
                	this.showToast('请输入手机号码')
                	return
                }
                if(!(/^1[3456789]\d{9}$/.test(this.customerObj.mobile))){ 
                    this.showToast("请输入正确电话号码") 
                    return 
                } 
				if(this.customerObj.identity !== ''){
					if(!IdentityCodeValid(this.customerObj.identity)){
					    this.showToast('请输入正确的身份证件号码');
					    return;
					}
				}
                this.$api.post('member/customer/addCustomerByUserId.do', this.customerObj).then( res => {
                    if(res.success){
                        this.showToast('添加成功！')
                        setTimeout(()=>{
                            this.backPage()
                        },1500)
                    }
                })
            }
        }
    }
</script>

<style lang="scss" scoped>
 .group{width: 702rpx; margin: 24rpx auto 0; background-color: #fff; border-radius: 12rpx; padding: 0 24rpx;
    .last-item{border: none;}
    .list-item{display: flex; align-items: center; height: 104rpx; line-height: 104rpx; border-bottom: 1rpx solid #DDD;
        .left{font-size: 32rpx; width: 152rpx; margin-right: 30rpx;}
        .sex-box{display: flex; align-items: center;
            view{width: 102rpx; height: 48rpx; line-height: 44rpx; text-align: center; border: 2rpx solid #999; border-radius: 30rpx; margin-right: 24rpx; font-size: 32rpx; color: #999;
                &.act{border-color: #ff5000; color: #ff5000;}
            }
        }
    }
 }
.btn{margin: 40rpx auto 0; width: 702rpx; height: 88rpx; line-height: 88rpx; background-color: #ff5000; color: #fff; border-radius: 8rpx; font-size: 32rpx;}
</style>
